Babel : 노드 버전과 상관없이 js 컴파일 해줌.
Apollo server : graphQL을 받아들여 db에 접근하게 도와주는 서버
nodemon : 코드를 계속 모니터링하면서 변화 생길 시 서버 리부팅없이도 바로 반영
Prisma : ORM. sql코드를 쓰지 않고 js코드로 db와 통신
Prisma Client : db와 소통하는 클라이언트
Prisma migrate : schema.prisma에서 정의한 model(스키마)을 실제 db에 적용시킴. 이때 gql의 typeDefs와 같게
수동으로 작성해 주어야 함.
Prisma Studio : schema.prisma를 바탕으로 현재 db를 시각적으로 보여주고 쿼리도 가능함

login 과정 : 아이디와 패스워드를 확인 -> 맞으면 유저에게 토큰 발행(백엔드) -> login시 유저가 토큰 제출(프론트에서 http req로) -> 식별(백엔드)
server의 context parameter : 모든 resolver들에게 전달 가능
protectedResolver : 유저의 토큰 정보 미리 확인(서버의 context로 전달) -> 정보 없으면 오류 리턴, 있으면 원래 실행해야될 resolver 리턴
업로드 과정 : 유저가 내 서버에 파일 업로드 -> 서버에 있는 파일을 aws에 업로드 -> aws에서 url 얻음

express server를 apollo server에 추가한 이유 : rest api 이용 할 수 있고 socket programming 가능하게 하려고
relation : 실제 db에 저장되지 않음, 생성시 connect, 삭제시 disconnect 필요
